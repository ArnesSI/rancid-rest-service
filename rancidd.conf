# Configuration file for rancid web service daemon.
#

# Address/hostname to listen on. Use * to listen on all available addresses.
# Default: localhost
host localhost

# TCP port to listen on
# Default: 10680
port 10680

# Number of seconds to wait for parsing headers.
# Default: 15
timeout_header 15

# Number of seconds a request can be idle before the request is closed.
# Default: 30
timeout_idle 60

# Path to PID file.
# Directory containing pid file must be writable to user running rancidd.
# Default: /tmp/rancidd.pid
pid_file /tmp/rancidd.pid

# Run server in debug mode
# Valid values: 0, 1. Default: 0.
# Implies background=0
debug 0

#
# Disconect from terminal after startup
# Valid values: 0, 1. Default: 0.
background 0

# Log verbosity
# Valid values:
#  - 0 : logging disabled
#  - 1 : errors/warning
#  - 2 : info (default)
#  - 3 : debug
#  - 4 : trace
log_level 4

# Path to log file or log to syslog. Use Sys::Syslog to log to syslog.
# Default: Sys::Syslog
log_file Sys::Syslog

# Id to prepend on syslog entries. Only used if logging to syslog.
# Default: rancidd
syslog_ident rancidd

# Syslog facility if logging to syslog.
# Default: daemon
syslog_facility daemon

# Read password from STDIN instead of prompting user.
# Default 0
password_from_stdin 1

####################################
#    Settings for rancid paths     #
####################################

# Prefix where rancid is installed. Other paths are based of this value.
# Use / if rancid files are installed in standard paths and set the
# other values as well.
# Default: /opt/rancid
#rancid_base_path

# Directory containing rancid configuration paths.
# Default: <rancid_base_path>/etc
#rancid_config_path

# Directory containing rancid scripts.
# Default: <rancid_base_path>/bin
# rancid_bin_path

# Path to cloginrc file. If you want to encrypt this file it must have .gpg
# extenstion and make sure rancid scripts will be able to find this file -
# eather via include in standard .cloginrc ot via $CLOGINRC enviroment
# variable.
# Default: $ENV{HOME}/.cloginrc
#rancid_cloginrc

####################################
# Settings for cloginrc encryption #
####################################

# GPG key UIDs (recipeints) to use for encrypting cloginrc file.
# Separate multiple recipients with a comma.
# Leave empty if you do not want leave cloginrc in clear text.
# Default: <empty>
gpg_key_uid

####################################
# Settings for cloginrc decryption #
####################################

# UID (recipeint) of GPG key to preset passphrase for
# Leave empty if you won't use encrypted .cloginrc
# Default: <empty>
gpg_decrypt_key

# Command template for getting GPG key fingerprint of gpg_decrypt_key
# Used to preset GPG key passphrase in gpg-agent.
# Special string "<recipient>" (without quotes) will be replaced with the
# value of gpg_decrypt_key.
# NOTE: Resulting fingerprint must not contain whitespace!
# Default: /usr/bin/gpg --fingerprint --fingerprint <gpg_decrypt_key> | grep -A1 ^sub | tail -1 | sed 's/.*= //' | tr -d '[:blank:]'
fingerprint_cmd_template /usr/bin/gpg --fingerprint --fingerprint <gpg_decrypt_key> | grep -A1 ^sub | tail -1 | sed 's/.*= //' | tr -d '[:blank:]'

# Command template for preseting GPG key passhprase in gpg-agent.
# Specila string "<gpg_key_fingerprint>" (without quotes) will be replaced
# with the GPG fingerprint of gpg_decrypt_key.
# Defailt: /usr/libexec/gpg-preset-passphrase --preset <gpg_key_fingerprint>
preset_cmd_template /usr/libexec/gpg-preset-passphrase --preset <gpg_key_fingerprint>

